/*
 * This file is generated by jOOQ.
 */
package com.example.demo.infrastructure.repositories.tables.pojos;


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import java.io.Serializable;
import java.time.LocalDateTime;


import lombok.Data;
import lombok.extern.slf4j.Slf4j;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import javax.persistence.EntityListeners;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;
import org.springframework.data.domain.Persistable;
import javax.persistence.Version;

/**
 * OAuth Client
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Slf4j
@Data
@EntityListeners({AuditingEntityListener.class})
@JsonIgnoreProperties(value = {"hibernateLazyInitializer", "handler", "fieldHandler"})
@Entity
@Table(
    name = "oauth2_client",
    schema = "public",
    uniqueConstraints = {
        @UniqueConstraint(name = "uk_oauth2_client_client_id", columnNames = { "client_id" })
    }
)
public class Oauth2Client implements Serializable, Persistable<String> {

    private static final long serialVersionUID = 1L;

    @Id
    @Column(name = "id", nullable = false, length = 10)
    @NotNull
    @Size(max = 10)
    private String        id;

    @Column(name = "client_id", nullable = false, length = 100)
    @NotNull
    @Size(max = 100)
    private String        clientId;

    @Column(name = "client_id_issued_at", nullable = false, precision = 6)
    private LocalDateTime clientIdIssuedAt;

    @Column(name = "client_secret", length = 200)
    @Size(max = 200)
    private String        clientSecret;

    @Column(name = "client_secret_expires_at", precision = 6)
    private LocalDateTime clientSecretExpiresAt;

    @Column(name = "client_name", nullable = false, length = 200)
    @NotNull
    @Size(max = 200)
    private String        clientName;

    @CreatedBy
    @Column(name = "created_by", length = 30)
    @Size(max = 30)
    private String        createdBy;

    @CreatedDate
    @Column(name = "created_date", nullable = false, precision = 6)
    private LocalDateTime createdDate;

    @LastModifiedBy
    @Column(name = "last_modified_by", length = 30)
    @Size(max = 30)
    private String        lastModifiedBy;

    @LastModifiedDate
    @Column(name = "last_modified_date", nullable = false, precision = 6)
    private LocalDateTime lastModifiedDate;


    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Oauth2Client other = (Oauth2Client) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.clientId == null) {
            if (other.clientId != null)
                return false;
        }
        else if (!this.clientId.equals(other.clientId))
            return false;
        if (this.clientIdIssuedAt == null) {
            if (other.clientIdIssuedAt != null)
                return false;
        }
        else if (!this.clientIdIssuedAt.equals(other.clientIdIssuedAt))
            return false;
        if (this.clientSecret == null) {
            if (other.clientSecret != null)
                return false;
        }
        else if (!this.clientSecret.equals(other.clientSecret))
            return false;
        if (this.clientSecretExpiresAt == null) {
            if (other.clientSecretExpiresAt != null)
                return false;
        }
        else if (!this.clientSecretExpiresAt.equals(other.clientSecretExpiresAt))
            return false;
        if (this.clientName == null) {
            if (other.clientName != null)
                return false;
        }
        else if (!this.clientName.equals(other.clientName))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        }
        else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.createdDate == null) {
            if (other.createdDate != null)
                return false;
        }
        else if (!this.createdDate.equals(other.createdDate))
            return false;
        if (this.lastModifiedBy == null) {
            if (other.lastModifiedBy != null)
                return false;
        }
        else if (!this.lastModifiedBy.equals(other.lastModifiedBy))
            return false;
        if (this.lastModifiedDate == null) {
            if (other.lastModifiedDate != null)
                return false;
        }
        else if (!this.lastModifiedDate.equals(other.lastModifiedDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.clientId == null) ? 0 : this.clientId.hashCode());
        result = prime * result + ((this.clientIdIssuedAt == null) ? 0 : this.clientIdIssuedAt.hashCode());
        result = prime * result + ((this.clientSecret == null) ? 0 : this.clientSecret.hashCode());
        result = prime * result + ((this.clientSecretExpiresAt == null) ? 0 : this.clientSecretExpiresAt.hashCode());
        result = prime * result + ((this.clientName == null) ? 0 : this.clientName.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.createdDate == null) ? 0 : this.createdDate.hashCode());
        result = prime * result + ((this.lastModifiedBy == null) ? 0 : this.lastModifiedBy.hashCode());
        result = prime * result + ((this.lastModifiedDate == null) ? 0 : this.lastModifiedDate.hashCode());
        return result;
    }
    
    @Override
    public String getId() {
        return this.id;
    }
    
    @JsonIgnore
    @Override
    public boolean isNew() {
        return null == this.createdDate;
    }
    
}
