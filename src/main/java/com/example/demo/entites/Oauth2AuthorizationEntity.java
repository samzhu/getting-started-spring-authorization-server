/*
 * This file is generated by jOOQ.
 */
package com.example.demo.entites;


import java.io.Serializable;
import java.time.LocalDateTime;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Entity
@Table(
    name = "oauth2_authorization",
    uniqueConstraints = {
      @UniqueConstraint(
          name = "pk_oauth2_authorization",
          columnNames = {"id"})
    })
public class Oauth2AuthorizationEntity implements Serializable {

  private static final long serialVersionUID = 1L;

  private String id;
  private String registeredClientId;
  private String principalName;
  private String authorizationGrantType;
  private String attributes;
  private String state;
  private String authorizationCodeValue;
  private LocalDateTime authorizationCodeIssuedAt;
  private LocalDateTime authorizationCodeExpiresAt;
  private String authorizationCodeMetadata;
  private String accessTokenValue;
  private LocalDateTime accessTokenIssuedAt;
  private LocalDateTime accessTokenExpiresAt;
  private String accessTokenMetadata;
  private String accessTokenType;
  private String accessTokenScopes;
  private String oidcIdTokenValue;
  private LocalDateTime oidcIdTokenIssuedAt;
  private LocalDateTime oidcIdTokenExpiresAt;
  private String oidcIdTokenMetadata;
  private String refreshTokenValue;
  private LocalDateTime refreshTokenIssuedAt;
  private LocalDateTime refreshTokenExpiresAt;
  private String refreshTokenMetadata;

  public Oauth2AuthorizationEntity() {}

  public Oauth2AuthorizationEntity(Oauth2AuthorizationEntity value) {
    this.id = value.id;
    this.registeredClientId = value.registeredClientId;
    this.principalName = value.principalName;
    this.authorizationGrantType = value.authorizationGrantType;
    this.attributes = value.attributes;
    this.state = value.state;
    this.authorizationCodeValue = value.authorizationCodeValue;
    this.authorizationCodeIssuedAt = value.authorizationCodeIssuedAt;
    this.authorizationCodeExpiresAt = value.authorizationCodeExpiresAt;
    this.authorizationCodeMetadata = value.authorizationCodeMetadata;
    this.accessTokenValue = value.accessTokenValue;
    this.accessTokenIssuedAt = value.accessTokenIssuedAt;
    this.accessTokenExpiresAt = value.accessTokenExpiresAt;
    this.accessTokenMetadata = value.accessTokenMetadata;
    this.accessTokenType = value.accessTokenType;
    this.accessTokenScopes = value.accessTokenScopes;
    this.oidcIdTokenValue = value.oidcIdTokenValue;
    this.oidcIdTokenIssuedAt = value.oidcIdTokenIssuedAt;
    this.oidcIdTokenExpiresAt = value.oidcIdTokenExpiresAt;
    this.oidcIdTokenMetadata = value.oidcIdTokenMetadata;
    this.refreshTokenValue = value.refreshTokenValue;
    this.refreshTokenIssuedAt = value.refreshTokenIssuedAt;
    this.refreshTokenExpiresAt = value.refreshTokenExpiresAt;
    this.refreshTokenMetadata = value.refreshTokenMetadata;
  }

  public Oauth2AuthorizationEntity(
      String id,
      String registeredClientId,
      String principalName,
      String authorizationGrantType,
      String attributes,
      String state,
      String authorizationCodeValue,
      LocalDateTime authorizationCodeIssuedAt,
      LocalDateTime authorizationCodeExpiresAt,
      String authorizationCodeMetadata,
      String accessTokenValue,
      LocalDateTime accessTokenIssuedAt,
      LocalDateTime accessTokenExpiresAt,
      String accessTokenMetadata,
      String accessTokenType,
      String accessTokenScopes,
      String oidcIdTokenValue,
      LocalDateTime oidcIdTokenIssuedAt,
      LocalDateTime oidcIdTokenExpiresAt,
      String oidcIdTokenMetadata,
      String refreshTokenValue,
      LocalDateTime refreshTokenIssuedAt,
      LocalDateTime refreshTokenExpiresAt,
      String refreshTokenMetadata) {
    this.id = id;
    this.registeredClientId = registeredClientId;
    this.principalName = principalName;
    this.authorizationGrantType = authorizationGrantType;
    this.attributes = attributes;
    this.state = state;
    this.authorizationCodeValue = authorizationCodeValue;
    this.authorizationCodeIssuedAt = authorizationCodeIssuedAt;
    this.authorizationCodeExpiresAt = authorizationCodeExpiresAt;
    this.authorizationCodeMetadata = authorizationCodeMetadata;
    this.accessTokenValue = accessTokenValue;
    this.accessTokenIssuedAt = accessTokenIssuedAt;
    this.accessTokenExpiresAt = accessTokenExpiresAt;
    this.accessTokenMetadata = accessTokenMetadata;
    this.accessTokenType = accessTokenType;
    this.accessTokenScopes = accessTokenScopes;
    this.oidcIdTokenValue = oidcIdTokenValue;
    this.oidcIdTokenIssuedAt = oidcIdTokenIssuedAt;
    this.oidcIdTokenExpiresAt = oidcIdTokenExpiresAt;
    this.oidcIdTokenMetadata = oidcIdTokenMetadata;
    this.refreshTokenValue = refreshTokenValue;
    this.refreshTokenIssuedAt = refreshTokenIssuedAt;
    this.refreshTokenExpiresAt = refreshTokenExpiresAt;
    this.refreshTokenMetadata = refreshTokenMetadata;
  }

  /** Getter for <code>public.oauth2_authorization.id</code>. */
  @Id
  @Column(name = "id", nullable = false, length = 100)
  @NotNull
  @Size(max = 100)
  public String getId() {
    return this.id;
  }

  /** Setter for <code>public.oauth2_authorization.id</code>. */
  public void setId(String id) {
    this.id = id;
  }

  /** Getter for <code>public.oauth2_authorization.registered_client_id</code>. */
  @Column(name = "registered_client_id", nullable = false, length = 100)
  @NotNull
  @Size(max = 100)
  public String getRegisteredClientId() {
    return this.registeredClientId;
  }

  /** Setter for <code>public.oauth2_authorization.registered_client_id</code>. */
  public void setRegisteredClientId(String registeredClientId) {
    this.registeredClientId = registeredClientId;
  }

  /** Getter for <code>public.oauth2_authorization.principal_name</code>. */
  @Column(name = "principal_name", nullable = false, length = 200)
  @NotNull
  @Size(max = 200)
  public String getPrincipalName() {
    return this.principalName;
  }

  /** Setter for <code>public.oauth2_authorization.principal_name</code>. */
  public void setPrincipalName(String principalName) {
    this.principalName = principalName;
  }

  /** Getter for <code>public.oauth2_authorization.authorization_grant_type</code>. */
  @Column(name = "authorization_grant_type", nullable = false, length = 100)
  @NotNull
  @Size(max = 100)
  public String getAuthorizationGrantType() {
    return this.authorizationGrantType;
  }

  /** Setter for <code>public.oauth2_authorization.authorization_grant_type</code>. */
  public void setAuthorizationGrantType(String authorizationGrantType) {
    this.authorizationGrantType = authorizationGrantType;
  }

  /** Getter for <code>public.oauth2_authorization.attributes</code>. */
  @Column(name = "attributes", length = 4000)
  @Size(max = 4000)
  public String getAttributes() {
    return this.attributes;
  }

  /** Setter for <code>public.oauth2_authorization.attributes</code>. */
  public void setAttributes(String attributes) {
    this.attributes = attributes;
  }

  /** Getter for <code>public.oauth2_authorization.state</code>. */
  @Column(name = "state", length = 500)
  @Size(max = 500)
  public String getState() {
    return this.state;
  }

  /** Setter for <code>public.oauth2_authorization.state</code>. */
  public void setState(String state) {
    this.state = state;
  }

  /** Getter for <code>public.oauth2_authorization.authorization_code_value</code>. */
  // @Lob
  // @Basic(fetch = FetchType.LAZY)
  // @Type(type = "org.hibernate.type.BinaryType")
  @Column(name = "authorization_code_value")
  public String getAuthorizationCodeValue() {
    return this.authorizationCodeValue;
  }

  /** Setter for <code>public.oauth2_authorization.authorization_code_value</code>. */
  public void setAuthorizationCodeValue(String authorizationCodeValue) {
    this.authorizationCodeValue = authorizationCodeValue;
  }

  /** Getter for <code>public.oauth2_authorization.authorization_code_issued_at</code>. */
  @Column(name = "authorization_code_issued_at", precision = 6)
  public LocalDateTime getAuthorizationCodeIssuedAt() {
    return this.authorizationCodeIssuedAt;
  }

  /** Setter for <code>public.oauth2_authorization.authorization_code_issued_at</code>. */
  public void setAuthorizationCodeIssuedAt(LocalDateTime authorizationCodeIssuedAt) {
    this.authorizationCodeIssuedAt = authorizationCodeIssuedAt;
  }

  /** Getter for <code>public.oauth2_authorization.authorization_code_expires_at</code>. */
  @Column(name = "authorization_code_expires_at", precision = 6)
  public LocalDateTime getAuthorizationCodeExpiresAt() {
    return this.authorizationCodeExpiresAt;
  }

  /** Setter for <code>public.oauth2_authorization.authorization_code_expires_at</code>. */
  public void setAuthorizationCodeExpiresAt(LocalDateTime authorizationCodeExpiresAt) {
    this.authorizationCodeExpiresAt = authorizationCodeExpiresAt;
  }

  /** Getter for <code>public.oauth2_authorization.authorization_code_metadata</code>. */
  @Column(name = "authorization_code_metadata", length = 2000)
  @Size(max = 2000)
  public String getAuthorizationCodeMetadata() {
    return this.authorizationCodeMetadata;
  }

  /** Setter for <code>public.oauth2_authorization.authorization_code_metadata</code>. */
  public void setAuthorizationCodeMetadata(String authorizationCodeMetadata) {
    this.authorizationCodeMetadata = authorizationCodeMetadata;
  }

  /** Getter for <code>public.oauth2_authorization.access_token_value</code>. */
  @Column(name = "access_token_value")
  public String getAccessTokenValue() {
    return this.accessTokenValue;
  }

  /** Setter for <code>public.oauth2_authorization.access_token_value</code>. */
  public void setAccessTokenValue(String accessTokenValue) {
    this.accessTokenValue = accessTokenValue;
  }

  /** Getter for <code>public.oauth2_authorization.access_token_issued_at</code>. */
  @Column(name = "access_token_issued_at", precision = 6)
  public LocalDateTime getAccessTokenIssuedAt() {
    return this.accessTokenIssuedAt;
  }

  /** Setter for <code>public.oauth2_authorization.access_token_issued_at</code>. */
  public void setAccessTokenIssuedAt(LocalDateTime accessTokenIssuedAt) {
    this.accessTokenIssuedAt = accessTokenIssuedAt;
  }

  /** Getter for <code>public.oauth2_authorization.access_token_expires_at</code>. */
  @Column(name = "access_token_expires_at", precision = 6)
  public LocalDateTime getAccessTokenExpiresAt() {
    return this.accessTokenExpiresAt;
  }

  /** Setter for <code>public.oauth2_authorization.access_token_expires_at</code>. */
  public void setAccessTokenExpiresAt(LocalDateTime accessTokenExpiresAt) {
    this.accessTokenExpiresAt = accessTokenExpiresAt;
  }

  /** Getter for <code>public.oauth2_authorization.access_token_metadata</code>. */
  @Column(name = "access_token_metadata", length = 2000)
  @Size(max = 2000)
  public String getAccessTokenMetadata() {
    return this.accessTokenMetadata;
  }

  /** Setter for <code>public.oauth2_authorization.access_token_metadata</code>. */
  public void setAccessTokenMetadata(String accessTokenMetadata) {
    this.accessTokenMetadata = accessTokenMetadata;
  }

  /** Getter for <code>public.oauth2_authorization.access_token_type</code>. */
  @Column(name = "access_token_type", length = 100)
  @Size(max = 100)
  public String getAccessTokenType() {
    return this.accessTokenType;
  }

  /** Setter for <code>public.oauth2_authorization.access_token_type</code>. */
  public void setAccessTokenType(String accessTokenType) {
    this.accessTokenType = accessTokenType;
  }

  /** Getter for <code>public.oauth2_authorization.access_token_scopes</code>. */
  @Column(name = "access_token_scopes", length = 1000)
  @Size(max = 1000)
  public String getAccessTokenScopes() {
    return this.accessTokenScopes;
  }

  /** Setter for <code>public.oauth2_authorization.access_token_scopes</code>. */
  public void setAccessTokenScopes(String accessTokenScopes) {
    this.accessTokenScopes = accessTokenScopes;
  }

  /** Getter for <code>public.oauth2_authorization.oidc_id_token_value</code>. */
  @Column(name = "oidc_id_token_value")
  public String getOidcIdTokenValue() {
    return this.oidcIdTokenValue;
  }

  /** Setter for <code>public.oauth2_authorization.oidc_id_token_value</code>. */
  public void setOidcIdTokenValue(String oidcIdTokenValue) {
    this.oidcIdTokenValue = oidcIdTokenValue;
  }

  /** Getter for <code>public.oauth2_authorization.oidc_id_token_issued_at</code>. */
  @Column(name = "oidc_id_token_issued_at", precision = 6)
  public LocalDateTime getOidcIdTokenIssuedAt() {
    return this.oidcIdTokenIssuedAt;
  }

  /** Setter for <code>public.oauth2_authorization.oidc_id_token_issued_at</code>. */
  public void setOidcIdTokenIssuedAt(LocalDateTime oidcIdTokenIssuedAt) {
    this.oidcIdTokenIssuedAt = oidcIdTokenIssuedAt;
  }

  /** Getter for <code>public.oauth2_authorization.oidc_id_token_expires_at</code>. */
  @Column(name = "oidc_id_token_expires_at", precision = 6)
  public LocalDateTime getOidcIdTokenExpiresAt() {
    return this.oidcIdTokenExpiresAt;
  }

  /** Setter for <code>public.oauth2_authorization.oidc_id_token_expires_at</code>. */
  public void setOidcIdTokenExpiresAt(LocalDateTime oidcIdTokenExpiresAt) {
    this.oidcIdTokenExpiresAt = oidcIdTokenExpiresAt;
  }

  /** Getter for <code>public.oauth2_authorization.oidc_id_token_metadata</code>. */
  @Column(name = "oidc_id_token_metadata", length = 2000)
  @Size(max = 2000)
  public String getOidcIdTokenMetadata() {
    return this.oidcIdTokenMetadata;
  }

  /** Setter for <code>public.oauth2_authorization.oidc_id_token_metadata</code>. */
  public void setOidcIdTokenMetadata(String oidcIdTokenMetadata) {
    this.oidcIdTokenMetadata = oidcIdTokenMetadata;
  }

  /** Getter for <code>public.oauth2_authorization.refresh_token_value</code>. */
  @Column(name = "refresh_token_value")
  public String getRefreshTokenValue() {
    return this.refreshTokenValue;
  }

  /** Setter for <code>public.oauth2_authorization.refresh_token_value</code>. */
  public void setRefreshTokenValue(String refreshTokenValue) {
    this.refreshTokenValue = refreshTokenValue;
  }

  /** Getter for <code>public.oauth2_authorization.refresh_token_issued_at</code>. */
  @Column(name = "refresh_token_issued_at", precision = 6)
  public LocalDateTime getRefreshTokenIssuedAt() {
    return this.refreshTokenIssuedAt;
  }

  /** Setter for <code>public.oauth2_authorization.refresh_token_issued_at</code>. */
  public void setRefreshTokenIssuedAt(LocalDateTime refreshTokenIssuedAt) {
    this.refreshTokenIssuedAt = refreshTokenIssuedAt;
  }

  /** Getter for <code>public.oauth2_authorization.refresh_token_expires_at</code>. */
  @Column(name = "refresh_token_expires_at", precision = 6)
  public LocalDateTime getRefreshTokenExpiresAt() {
    return this.refreshTokenExpiresAt;
  }

  /** Setter for <code>public.oauth2_authorization.refresh_token_expires_at</code>. */
  public void setRefreshTokenExpiresAt(LocalDateTime refreshTokenExpiresAt) {
    this.refreshTokenExpiresAt = refreshTokenExpiresAt;
  }

  /** Getter for <code>public.oauth2_authorization.refresh_token_metadata</code>. */
  @Column(name = "refresh_token_metadata", length = 2000)
  @Size(max = 2000)
  public String getRefreshTokenMetadata() {
    return this.refreshTokenMetadata;
  }

  /** Setter for <code>public.oauth2_authorization.refresh_token_metadata</code>. */
  public void setRefreshTokenMetadata(String refreshTokenMetadata) {
    this.refreshTokenMetadata = refreshTokenMetadata;
  }
}
